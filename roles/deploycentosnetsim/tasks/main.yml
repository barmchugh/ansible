---
  ######################### Useful Learnings, all work ######################### 

    - name: Update /root/.ansible/tmp/setupvariables.yml file with the customized facts based on what Subnet Netsims are within.
      connection: local
      template: src=vm_var_gen.j2 dest=/root/.ansible/tmp/setupvariables.yml
      run_once: true

    - include_vars: /root/.ansible/tmp/setupvariables.yml
      run_once: true

    - include_vars: logins.yml
      run_once: true
      tags: users


    - name: Deploy guest from template
      connection: local 
      vmware_guest: 
        hostname: "{{ vcenter }}"
        username: "{{vcenter_user}}"
        password: "{{vcenter_pass}}"
        validate_certs: no
        datacenter: "{{ datacenter }}" 
        cluster: "{{ cluster_input }}" 
        folder: "{{ datacenter }}/vm"
        #esxi_hostname: "{{ hostvars[inventory_hostname].group_names[0] }}"
        name: "{{ inventory_hostname }}"
        state: poweredon 
        template: "{{ centos_vm_template }}"  # Variable generated by Jinja2 file in Templates and stored in temp .yml 
        wait_for_ip_address: no 
        networks:
        - name: "{{ net_adapter1 }}"    # Variable generated by Jinja2 file in Templates and stored in temp .yml 
          ip: "{{ lookup('dig', '{{ inventory_hostname }}' )}}"
          netmask: "{{ mask }}"  # Variable generated by Jinja2 file in Templates and stored in temp .yml 
          gateway: "{{ gateway }}" # Variable generated by Jinja2 file in Templates and stored in temp .yml 
    #      gateway: "{{ ipv6_gateway }}" ### This doesn't work!!!!! ### 
        customization:
          hostname: "{{ inventory_hostname }}" 
         #autologon: True
          dns_servers:
          - "{{ nameserver1 }}"
          - "{{ nameserver2 }}"
          domain: "{{ search_domain }}"

    - name: Wait for VM up
#      local_action: wait_for host={{ inventory_hostname }} state=started port=22 delay=10 timeout=30 connect_timeout=15
      local_action: wait_for host={{ inventory_hostname }} state=started port=22 delay=10 timeout=240 connect_timeout=15
      register: up_result
      ignore_errors: yes

    - name: Power on any VMs that didnt start the 1st time!
      connection: local
      vmware_guest:
        hostname: "{{ vcenter }}" 
        username: "{{vcenter_user}}"
        password: "{{vcenter_pass}}"
        datacenter: "{{ datacenter }}" 
        cluster: "{{ cluster_input }}"
        name: "{{ inventory_hostname }}"
        state: poweredon
        networks:
        - name: "{{ net_adapter1 }}"    # Variable generated by Jinja2 file in Templates and stored in temp .yml 
      when: up_result is failed

    - name: Wait for Slow Ass VMs to power on and run customization... Yawn.. ZzZZ!
      local_action: wait_for host={{ inventory_hostname }} state=started port=22 delay=10 timeout=240 connect_timeout=15

    - name: Run VIP Creation
      #connection: local
      #template: src=vips.j2 dest=/root/baz/vips.list
      template: src=vips.j2 dest=/etc/sysconfig/network-scripts/ifcfg-ens160
      register: ifcfg_state
      tags: vips

    # Restart the Network to apply IP addresses & routes.
    - name: Restart Network Service
      service:
        name: network
        state: restarted
      when: ifcfg_state is changed

    - name: Install Extra Packages
      include: packages.yml
      tags: packages

    - name: Add Users
      include: users.yml
      tags: users
