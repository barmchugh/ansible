{# {{item}} is passed in from main.yml and is a count using the range function #}
{# Set Up the variable names and values 1st #}
{% set ifcfg_name = 'ens160' %}
{#{% set vip_prefix = 22 %}#}
{% set ipv6_vip_prefix = 80 %}
{% set ipv6_vip_count = 2 %}
{% set vyos_number = 0 %}{# Old vFarm convention, just hardcoding 0 for now and can write logic if needed again #}
{% set address = lookup('dig', inventory_hostname + '.'+ domain ) %}
{% set vm_number = inventory_hostname.split('-')[1] | int %}
{% set vfarm_number = inventory_hostname.split('-')[0] | regex_search('(?<=[a-zA-Z][0-9]{1})([0-9]{1,3})') %}{# Get the 3 digit number of the VM Name. This (?<=[a-zA-Z][0-9]{1}) searches after the name and the 1st digit. HINT:  use the $ to select from end and match backward, this would be a similiar search regex_search('[0-9]{3}$') #}
NAME={{ifcfg_name}}:{{item}}	
DEVICE={{ifcfg_name}}:{{item}}
ONBOOT=yes
USERCTL=no
BOOTPROTO=static
NM_CONTROLLED=no
ARP=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
{% for net in networks %}
{% if address | ipaddr(net.netrng)>0 %}
{% set subnet_size = net.vip_network | ipsubnet(vip_prefix, vm_number) | ipaddr('size') %}{# Integer Value of the Subnet mask specified in Vars #}
{% set vm_network = net.vip_network | ipsubnet(vip_prefix, vm_number) %}{# Specific Network depending on the hostname of the VM #}
IPADDR={{ vm_network | ipaddr(item) | ipaddr('host') | ipaddr('address') }}
PREFIX={{vip_prefix}}
NETMASK={{ vm_network | ipaddr('netmask') }}
{% endif %}
{% endfor -%}
